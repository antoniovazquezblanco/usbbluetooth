name: Build

permissions:
  contents: read

on: [push, pull_request, workflow_dispatch]

jobs:
  build_library:
    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: 'msys2 {0}', ext: dll    }
          - { os: ubuntu-latest,  shell: bash,        ext: so     }
          - { os: macos-latest,   shell: bash,        ext: dylib  }
    name: Build library on ${{ matrix.sys.os }}
    runs-on: ${{ matrix.sys.os }}
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}
    steps:
    - name: Install dependencies (Ubuntu)
      if: matrix.sys.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install meson libusb-1.0-0 libusb-1.0-0-dev

    - name: Install dependencies (Mac OS)
      if: matrix.sys.os == 'macos-latest'
      run: brew install meson

    - name: Install dependencies (Windows)
      if: matrix.sys.os == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: UCRT64
        install: git mingw-w64-ucrt-x86_64-meson mingw-w64-ucrt-x86_64-libusb mingw-w64-ucrt-x86_64-ca-certificates mingw-w64-ucrt-x86_64-python-certifi mingw-w64-ucrt-x86_64-gcc

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Configure
      run: meson setup builddir

    - name: Build the library
      run: meson compile -v -C builddir

    - name: Package
      run: meson compile package -v -C builddir

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: usbbluetooth_${{ matrix.sys.os }}
        path: |
          builddir/src/libusbbluetooth/libusbbluetooth.${{ matrix.sys.ext }}
          builddir/winx64_usbbluetooth_*.zip


  build_bindings_python:
    needs: build_library
    name: Build Python bindings
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download artifacts
      uses: actions/download-artifact@v5

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson libusb-1.0-0 libusb-1.0-0-dev python3-build

    - name: Copy library
      run: cp usbbluetooth_*/src/libusbbluetooth/*.{so,dll,dylib} src/bindings/python/usbbluetooth/lib/

    - name: Configure
      run: meson setup builddir

    - name: Build package
      run: meson compile usbbluetooth_python -v -C builddir

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: usbbluetooth_python
        path: builddir/src/bindings/python/*


  build_bindings_csharp:
    needs: build_library
    name: Build C# bindings
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download artifacts
      uses: actions/download-artifact@v5

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson dotnet-sdk-8.0

    - name: Copy library
      run: cp usbbluetooth_*/src/libusbbluetooth/*.{so,dll,dylib} src/bindings/csharp/UsbBluetooth/

    - name: Configure
      run: meson setup builddir

    - name: Build package
      run: meson compile usbbluetooth_csharp -v -C builddir

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: usbbluetooth_csharp
        path: builddir/src/bindings/csharp/*.nupkg


  publish_release:
    runs-on: ubuntu-latest
    name: Publish to Github releases
    needs: [build_library, build_bindings_python, build_bindings_csharp]
    if: contains(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v5

    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          usbbluetooth_*/winx64_usbbluetooth_*.zip


  publish_nuget:
    runs-on: ubuntu-latest
    name: Publish NuGet package
    needs: [build_library, build_bindings_python, build_bindings_csharp]
    if: contains(github.ref, 'refs/tags/v')
    permissions:
      packages: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v5

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Upload to repository
      run: dotnet nuget push usbbluetooth_*/usbbluetooth*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json


  publish_pypi:
    name: Publish to PyPi
    needs: [build_library, build_bindings_python, build_bindings_csharp]
    if: contains(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/usbbluetooth
    permissions:
      id-token: write
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v5
      with:
        name: usbbluetooth_python
        path: dist/

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
